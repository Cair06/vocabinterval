from aiogram.types import Message, ContentType
from aiogram import Bot, Dispatcher, F
from aiogram import Router
from aiogram.filters import Command, CommandStart, CommandObject
from aiogram.utils.keyboard import (
    ReplyKeyboardBuilder, InlineKeyboardBuilder
)


from core.settings import settings, bot_commands


router = Router()


@router.startup()
async def start_bot(bot: Bot):
    await bot.send_message(settings.bots.admin_id, text="–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

@router.shutdown()
async def stop_bot(bot: Bot):
    await bot.send_message(settings.bots.admin_id, text="–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")



@router.message(CommandStart())
async def get_start(message: Message, bot: Bot):
    menu_builder = ReplyKeyboardBuilder()
    menu_builder.button(
        text="–ü–æ–º–æ—â—å"
    )
    menu_builder.button(
        text="–°–ª–æ–≤–∞—Ä—å"
    )
    menu_builder.button(
        text="–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"
    )
    await message.answer(
        "–ú–µ–Ω—é",
        reply_markup=menu_builder.as_markup(resize_keyboard=True)
    )

@router.message(Command(commands=["help"]))
async def help_command(message: Message, bot: Bot, command: CommandObject):
    if command.args:
        for cmd in bot_commands:
            if cmd[0] == command.args:
                return await message.answer(
                    f"{cmd[0]} - {cmd[1]}\n\n{cmd[2]}"
                )
            else:
                return await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    return await help_func(message)
            

    
@router.message(F.text=="–ü–æ–º–æ—â—å")
async def help_func(message: Message):
    return await message.answer(
        "–ü–æ–º–æ—â—å –∏ —Å–ø—Ä–∞–≤–∫–∞ –æ –±–æ—Ç–µ\n"
        "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏—Å–ø–æ–ª—å–∑—É–π /help `–∫–æ–º–∞–Ω–¥–∞`\n"
    )
    
@router.message(F.text=="–°–ª–æ–≤–∞—Ä—å")
async def help_func(message: Message):
    return await message.answer(
            "–°–ª–æ–≤–∞—Ä—å:\n"
            "‚ñ´Ô∏èfamily üîÅ <tg-spoiler>—Å–µ–º—å—è, –æ–∫—Ä—É–≥–∞\n"
            "‚Äî I love my family\n"
            "‚Äî I deserve my family</tg-spoiler>"
            )

@router.message(F.text=="–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É")
async def help_func(message: Message):
    return await message.answer("–¢—É—Ç –≤—ã —Å–º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É")