# –°–æ–∑–¥–∞—ë–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
import datetime

from aiogram.types import Message, CallbackQuery
from sqlalchemy.orm import sessionmaker

from core.db import (
    get_cards_for_repetition,
    get_repetitions_by_card_id,
    LEVEL_TO_COLOR,
    LEVEL_TO_PERCENT,
    update_repetition
)
from core.handlers.paginations import Pagination
from core.keyboards import MAIN_MENU_BOARD


async def on_details_repetition(callback_query: CallbackQuery, session_maker: sessionmaker):
    """
    :param
    """
    user_id = callback_query.from_user.id
    today = datetime.date.today()
    cards_for_review = await get_cards_for_repetition(session_maker, user_id, today)
    if not cards_for_review:
        await callback_query.message.answer(f"–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –Ω–µ—Ç üôå", reply_markup=MAIN_MENU_BOARD)
        return

    pagination = Pagination(cards_for_review, page_size=1)
    current_page_cards = pagination.get_current_page_items()

    repetitions_info = await get_repetitions_by_card_id(session_maker, current_page_cards[0].id)
    repetition = repetitions_info[0]

    current_page_cards = pagination.get_current_page_items()
    repetitions_info = await get_repetitions_by_card_id(session_maker, current_page_cards[0].id)
    repetition = repetitions_info[0]

    result = "\n".join(
        f"‚ñ´Ô∏è {card.foreign_word} - <tg-spoiler>{card.translation}</tg-spoiler>\n\n{LEVEL_TO_COLOR[repetition.level]}"
        f"({LEVEL_TO_PERCENT[repetition.level]}) - üïì {repetition.next_review_date}"
        for card in pagination.get_current_page_items()
    )
    await callback_query.message.answer(f"–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:\n\n{result}",
                                        reply_markup=pagination.update_kb_repetition_detail(repetition.id))


async def on_details_repetition_pagination(callback_query: CallbackQuery, session_maker: sessionmaker):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.
    """
    # –†–∞–∑–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è
    # repetition_detail_page
    data_parts = callback_query.data.split('_')
    page_action = data_parts[2]
    page_number = int(data_parts[3])

    user_id = callback_query.from_user.id
    today = datetime.date.today()

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    cards_for_review = await get_cards_for_repetition(session_maker, user_id, today)
    if not cards_for_review:
        await callback_query.message.answer("–ù–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –Ω–µ—Ç üôå", reply_markup=MAIN_MENU_BOARD)
        return

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    pagination = Pagination(cards_for_review, page_size=1)
    pagination.current_page = page_number

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è—Ö
    current_page_cards = pagination.get_current_page_items()
    repetitions_info = await get_repetitions_by_card_id(session_maker, current_page_cards[0].id)
    repetition = repetitions_info[0] if repetitions_info else None

    # –°–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π
    if repetition:
        result = "\n".join(
            f"‚ñ´Ô∏è {card.foreign_word} - <tg-spoiler>{card.translation}</tg-spoiler>\n\n{LEVEL_TO_COLOR[repetition.level]}"
            f"({LEVEL_TO_PERCENT[repetition.level]}) - üïì {repetition.next_review_date}"
            for card in current_page_cards
        )
        await callback_query.message.edit_text(f"–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏—è:\n\n{result}",
                                               reply_markup=pagination.update_kb_repetition_detail(repetition.id))
    else:
        await callback_query.message.edit_text("–î–µ—Ç–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    await callback_query.answer()


async def on_approve_repetition(callback_query: CallbackQuery, session_maker: sessionmaker):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π.
    """
    repetition_id = int(callback_query.data.split('_')[2])
    await update_repetition(session_maker, repetition_id, success=True)
    await callback_query.message.answer("–û—Ç–ª–∏—á–Ω–æ!\n–ö–∞—Ä—Ç–æ—á–∫–∞ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∞ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∞.")
